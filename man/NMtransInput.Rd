% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NMtransInput.R
\name{NMtransInput}
\alias{NMtransInput}
\title{read input data and translate names according to the $INPUT section}
\usage{
NMtransInput(
  file,
  use.rds = TRUE,
  file.mod = NULL,
  dir.data = NULL,
  applyFilters = FALSE,
  quiet = FALSE,
  invert = FALSE,
  as.fun = NULL
)
}
\arguments{
\item{file}{a .lst (output) or a .mod (input) control stream
file. The filename does not need to end in .lst. It is
recommended to use the output control stream because it
reflects the model as it was run rather than how it is planned
for next run.}

\item{use.rds}{If an rds file is found with the exact same name
(except for .rds instead of say .csv) as the text file
mentioned in the Nonmem control stream, should this be used
instead? The default is yes, and NMwriteData will create this
by default too.}

\item{file.mod}{The input control stream. Default is to look for
\"file\" with extension changed to .mod (PSN style). You can
also supply the path to the file, or you can provide a
function that translates the output file path to the input
file path. If dir.data is missing, the input control stream is
needed. This is because the .lst does not contain the path to
the data file. The .mod file is only used for finding the data
file. How to interpret the datafile is read from the .lst
file. See dir.data too.}

\item{dir.data}{The data directory can only be read from the
control stream (.mod) and not from the output file (.lst). So
if you only have the output file, use dir.data to tell in
which directory to find the data file. If dir.data is
provided, the .mod file is not used at all.}

\item{applyFilters}{Set to TRUE if you want IGNORE and ACCEPT
statements in the nonmem control streams to be applied before
returning the data.}

\item{quiet}{Default is to inform a little, but TRUE is useful for
non-interactive stuff.}

\item{invert}{If TRUE, the data rows that are dismissed by the
Nonmem data filters (ACCEPT and IGNORE) will be returned.}

\item{as.fun}{The default is to return data in data.tables. Pass a
function in as.fun to convert to something else. If
data.frames are wanted, use as.fun=as.data.frame.}
}
\description{
Based on a nonmem run, this function finds the input
    data and reads it. But it reads it like the nonmem run by
    applying DROP arguments and alternative naming of columns in
    the nonmem run.
}
\details{
The line containing whom the license is issued to cannot
    be retrieved. Special characters like accents and the
    registerred trademark (R) sign are likely to cause trouble if
    locales are changed (say from a linux system running Nonmem to
    a Windows or Mac running R), so this line is
    discarded. Columns that are dropped (using DROP or SKIP in
    $INPUT) in the model will be included in the output.
}
\seealso{
Other DataRead: 
\code{\link{NMreadCsv}()},
\code{\link{NMreadTab}()},
\code{\link{NMscanData}()},
\code{\link{NMscanTables}()}
}
\concept{DataRead}
